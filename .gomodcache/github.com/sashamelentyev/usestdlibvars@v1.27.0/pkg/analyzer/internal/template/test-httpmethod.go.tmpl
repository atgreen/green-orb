// Code generated by usestdlibvars, DO NOT EDIT.

package {{ .PackageName }}

import (
    "net/http"
    "net/http/httptest"
)

var (
{{- range $key, $value := .Mapping }}
	_ = "{{ $key }}"
{{- end }}
)

const (
{{- range $key, $value := .Mapping }}
	_ = "{{ $key }}"
{{- end }}
)

var (
{{- range $key, $value := .Mapping }}
	_, _ = http.NewRequest("{{ $key }}", "", http.NoBody) // want `"{{ quoteMeta $key }}" can be replaced by {{ quoteMeta $value }}`
{{- end }}
)

var (
{{- range $key, $value := .Mapping }}
	_, _ = http.NewRequestWithContext(nil, "{{ $key }}", "", http.NoBody) // want `"{{ quoteMeta $key }}" can be replaced by {{ quoteMeta $value }}`
{{- end }}
)

var (
{{- range $key, $value := .Mapping }}
	_ = http.Request{Method: "{{ $key }}"} // want `"{{ quoteMeta $key }}" can be replaced by {{ quoteMeta $value }}`
{{- end }}
)

var (
{{- range $key, $value := .Mapping }}
	_ = &http.Request{Method: "{{ $key }}"} // want `"{{ quoteMeta $key }}" can be replaced by {{ quoteMeta $value }}`
{{- end }}
)

func _() error {
    resp, err := http.DefaultClient.Do(&http.Request{})
    if err != nil {
        return err
    }
    defer func() { _ = resp.Body.Close() }()
{{- range $key, $value := .Mapping }}
    if resp.Request.Method == "{{ $key }}" { // want `"{{ quoteMeta $key }}" can be replaced by {{ quoteMeta $value }}`
        return nil
    }
{{- end }}
{{- range $key, $value := .Mapping }}
    for resp.Request.Method == "{{ $key }}" { // want `"{{ quoteMeta $key }}" can be replaced by {{ quoteMeta $value }}`
        return nil
    }
{{- end }}
    return nil
}

func _() error {
    resp, err := http.DefaultClient.Do(&http.Request{})
    if err != nil {
        return err
    }
    defer func() { _ = resp.Body.Close() }()
{{- range $key, $value := .Mapping }}
    if resp.Request.Method == {{ $value }} {
        return nil
    }
{{- end }}
{{- range $key, $value := .Mapping }}
    for resp.Request.Method == {{ $value }} {
        return nil
    }
{{- end }}
    return nil
}

func _() {
    var r http.Request
    switch r.Method {
{{- range $key, $value := .Mapping }}
    case "{{ $key }}": // want `"{{ quoteMeta $key }}" can be replaced by {{ quoteMeta $value }}`
      return
{{- end }}
    }
}

func _() {
    var r http.Request
    switch r.Method {
{{- range $key, $value := .Mapping }}
    case {{ $value }}:
      return
{{- end }}
    }
}

func _() {
    var r http.Request
    switch {
{{- range $key, $value := .Mapping }}
    case r.Method == "{{ $key }}": // want `"{{ quoteMeta $key }}" can be replaced by {{ quoteMeta $value }}`
      return
{{- end }}
    }
}

func _() {
    var r http.Request
    switch {
{{- range $key, $value := .Mapping }}
    case r.Method == {{ $value }}:
      return
{{- end }}
    }
}

var (
{{- range $key, $value := .Mapping }}
	_ = httptest.NewRequest("{{ $key }}", "", http.NoBody) // want `"{{ quoteMeta $key }}" can be replaced by {{ quoteMeta $value }}`
{{- end }}
)
