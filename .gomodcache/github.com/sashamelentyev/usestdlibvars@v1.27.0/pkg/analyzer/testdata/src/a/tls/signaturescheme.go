// Code generated by usestdlibvars, DO NOT EDIT.

package tls_test

var (
	_ = "ECDSAWithP256AndSHA256" // want `"ECDSAWithP256AndSHA256" can be replaced by tls\.ECDSAWithP256AndSHA256\.String\(\)`
	_ = "ECDSAWithP384AndSHA384" // want `"ECDSAWithP384AndSHA384" can be replaced by tls\.ECDSAWithP384AndSHA384\.String\(\)`
	_ = "ECDSAWithP521AndSHA512" // want `"ECDSAWithP521AndSHA512" can be replaced by tls\.ECDSAWithP521AndSHA512\.String\(\)`
	_ = "ECDSAWithSHA1"          // want `"ECDSAWithSHA1" can be replaced by tls\.ECDSAWithSHA1\.String\(\)`
	_ = "Ed25519"                // want `"Ed25519" can be replaced by tls\.Ed25519\.String\(\)`
	_ = "PKCS1WithSHA1"          // want `"PKCS1WithSHA1" can be replaced by tls\.PKCS1WithSHA1\.String\(\)`
	_ = "PKCS1WithSHA256"        // want `"PKCS1WithSHA256" can be replaced by tls\.PKCS1WithSHA256\.String\(\)`
	_ = "PKCS1WithSHA384"        // want `"PKCS1WithSHA384" can be replaced by tls\.PKCS1WithSHA384\.String\(\)`
	_ = "PKCS1WithSHA512"        // want `"PKCS1WithSHA512" can be replaced by tls\.PKCS1WithSHA512\.String\(\)`
	_ = "PSSWithSHA256"          // want `"PSSWithSHA256" can be replaced by tls\.PSSWithSHA256\.String\(\)`
	_ = "PSSWithSHA384"          // want `"PSSWithSHA384" can be replaced by tls\.PSSWithSHA384\.String\(\)`
	_ = "PSSWithSHA512"          // want `"PSSWithSHA512" can be replaced by tls\.PSSWithSHA512\.String\(\)`
)

const (
	_ = "ECDSAWithP256AndSHA256" // want `"ECDSAWithP256AndSHA256" can be replaced by tls\.ECDSAWithP256AndSHA256\.String\(\)`
	_ = "ECDSAWithP384AndSHA384" // want `"ECDSAWithP384AndSHA384" can be replaced by tls\.ECDSAWithP384AndSHA384\.String\(\)`
	_ = "ECDSAWithP521AndSHA512" // want `"ECDSAWithP521AndSHA512" can be replaced by tls\.ECDSAWithP521AndSHA512\.String\(\)`
	_ = "ECDSAWithSHA1"          // want `"ECDSAWithSHA1" can be replaced by tls\.ECDSAWithSHA1\.String\(\)`
	_ = "Ed25519"                // want `"Ed25519" can be replaced by tls\.Ed25519\.String\(\)`
	_ = "PKCS1WithSHA1"          // want `"PKCS1WithSHA1" can be replaced by tls\.PKCS1WithSHA1\.String\(\)`
	_ = "PKCS1WithSHA256"        // want `"PKCS1WithSHA256" can be replaced by tls\.PKCS1WithSHA256\.String\(\)`
	_ = "PKCS1WithSHA384"        // want `"PKCS1WithSHA384" can be replaced by tls\.PKCS1WithSHA384\.String\(\)`
	_ = "PKCS1WithSHA512"        // want `"PKCS1WithSHA512" can be replaced by tls\.PKCS1WithSHA512\.String\(\)`
	_ = "PSSWithSHA256"          // want `"PSSWithSHA256" can be replaced by tls\.PSSWithSHA256\.String\(\)`
	_ = "PSSWithSHA384"          // want `"PSSWithSHA384" can be replaced by tls\.PSSWithSHA384\.String\(\)`
	_ = "PSSWithSHA512"          // want `"PSSWithSHA512" can be replaced by tls\.PSSWithSHA512\.String\(\)`
)

var (
	_ = func(s string) string { return s }("ECDSAWithP256AndSHA256") // want `"ECDSAWithP256AndSHA256" can be replaced by tls\.ECDSAWithP256AndSHA256\.String\(\)`
	_ = func(s string) string { return s }("ECDSAWithP384AndSHA384") // want `"ECDSAWithP384AndSHA384" can be replaced by tls\.ECDSAWithP384AndSHA384\.String\(\)`
	_ = func(s string) string { return s }("ECDSAWithP521AndSHA512") // want `"ECDSAWithP521AndSHA512" can be replaced by tls\.ECDSAWithP521AndSHA512\.String\(\)`
	_ = func(s string) string { return s }("ECDSAWithSHA1")          // want `"ECDSAWithSHA1" can be replaced by tls\.ECDSAWithSHA1\.String\(\)`
	_ = func(s string) string { return s }("Ed25519")                // want `"Ed25519" can be replaced by tls\.Ed25519\.String\(\)`
	_ = func(s string) string { return s }("PKCS1WithSHA1")          // want `"PKCS1WithSHA1" can be replaced by tls\.PKCS1WithSHA1\.String\(\)`
	_ = func(s string) string { return s }("PKCS1WithSHA256")        // want `"PKCS1WithSHA256" can be replaced by tls\.PKCS1WithSHA256\.String\(\)`
	_ = func(s string) string { return s }("PKCS1WithSHA384")        // want `"PKCS1WithSHA384" can be replaced by tls\.PKCS1WithSHA384\.String\(\)`
	_ = func(s string) string { return s }("PKCS1WithSHA512")        // want `"PKCS1WithSHA512" can be replaced by tls\.PKCS1WithSHA512\.String\(\)`
	_ = func(s string) string { return s }("PSSWithSHA256")          // want `"PSSWithSHA256" can be replaced by tls\.PSSWithSHA256\.String\(\)`
	_ = func(s string) string { return s }("PSSWithSHA384")          // want `"PSSWithSHA384" can be replaced by tls\.PSSWithSHA384\.String\(\)`
	_ = func(s string) string { return s }("PSSWithSHA512")          // want `"PSSWithSHA512" can be replaced by tls\.PSSWithSHA512\.String\(\)`
)
