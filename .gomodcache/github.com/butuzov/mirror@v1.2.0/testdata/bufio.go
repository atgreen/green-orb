// Code generated by generate-tests; DO NOT EDIT.

package main

import (
	"bufio"
	. "bufio"
	pkg "bufio"
)


func main_bufio() {
	{
		b := bufio.Writer{}
		_,_ = b.Write([]byte("foobar")) // want `avoid allocations with \(\*bufio\.Writer\)\.WriteString`
	}

	{
		b := bufio.Writer{}
		_,_ = b.Write([]byte{'f','o','o','b','a','r'}) 
	}

	{
		b := Writer{}
		_,_ = b.Write([]byte("foobar")) // want `avoid allocations with \(\*bufio\.Writer\)\.WriteString`
	}

	{
		b := Writer{}
		_,_ = b.Write([]byte{'f','o','o','b','a','r'}) 
	}

	{
		b := pkg.Writer{}
		_,_ = b.Write([]byte("foobar")) // want `avoid allocations with \(\*bufio\.Writer\)\.WriteString`
	}

	{
		b := pkg.Writer{}
		_,_ = b.Write([]byte{'f','o','o','b','a','r'}) 
	}

	{
		b := bufio.Writer{}
		_,_ = b.WriteString(string([]byte{'f','o','o','b','a','r'})) // want `avoid allocations with \(\*bufio\.Writer\)\.Write`
	}

	{
		b := bufio.Writer{}
		_,_ = b.WriteString("foobar") 
	}

	{
		b := Writer{}
		_,_ = b.WriteString(string([]byte{'f','o','o','b','a','r'})) // want `avoid allocations with \(\*bufio\.Writer\)\.Write`
	}

	{
		b := Writer{}
		_,_ = b.WriteString("foobar") 
	}

	{
		b := pkg.Writer{}
		_,_ = b.WriteString(string([]byte{'f','o','o','b','a','r'})) // want `avoid allocations with \(\*bufio\.Writer\)\.Write`
	}

	{
		b := pkg.Writer{}
		_,_ = b.WriteString("foobar") 
	}

}
