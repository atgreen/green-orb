// Copyright 2024 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: internal/testprotos/editionsfuzztest/test3.proto

package editionsfuzztest

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

type ForeignEnumProto3 int32

const (
	ForeignEnumProto3_FOREIGN_PROTO3_ZERO ForeignEnumProto3 = 0
	ForeignEnumProto3_FOREIGN_PROTO3_FOO  ForeignEnumProto3 = 4
	ForeignEnumProto3_FOREIGN_PROTO3_BAR  ForeignEnumProto3 = 5
	ForeignEnumProto3_FOREIGN_PROTO3_BAZ  ForeignEnumProto3 = 6
)

// Enum value maps for ForeignEnumProto3.
var (
	ForeignEnumProto3_name = map[int32]string{
		0: "FOREIGN_PROTO3_ZERO",
		4: "FOREIGN_PROTO3_FOO",
		5: "FOREIGN_PROTO3_BAR",
		6: "FOREIGN_PROTO3_BAZ",
	}
	ForeignEnumProto3_value = map[string]int32{
		"FOREIGN_PROTO3_ZERO": 0,
		"FOREIGN_PROTO3_FOO":  4,
		"FOREIGN_PROTO3_BAR":  5,
		"FOREIGN_PROTO3_BAZ":  6,
	}
)

func (x ForeignEnumProto3) Enum() *ForeignEnumProto3 {
	p := new(ForeignEnumProto3)
	*p = x
	return p
}

func (x ForeignEnumProto3) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ForeignEnumProto3) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_testprotos_editionsfuzztest_test3_proto_enumTypes[0].Descriptor()
}

func (ForeignEnumProto3) Type() protoreflect.EnumType {
	return &file_internal_testprotos_editionsfuzztest_test3_proto_enumTypes[0]
}

func (x ForeignEnumProto3) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ForeignEnumProto3.Descriptor instead.
func (ForeignEnumProto3) EnumDescriptor() ([]byte, []int) {
	return file_internal_testprotos_editionsfuzztest_test3_proto_rawDescGZIP(), []int{0}
}

type TestAllTypesProto3_NestedEnum int32

const (
	TestAllTypesProto3_FOO TestAllTypesProto3_NestedEnum = 0
	TestAllTypesProto3_BAR TestAllTypesProto3_NestedEnum = 1
	TestAllTypesProto3_BAZ TestAllTypesProto3_NestedEnum = 2
	TestAllTypesProto3_NEG TestAllTypesProto3_NestedEnum = -1 // Intentionally negative.
)

// Enum value maps for TestAllTypesProto3_NestedEnum.
var (
	TestAllTypesProto3_NestedEnum_name = map[int32]string{
		0:  "FOO",
		1:  "BAR",
		2:  "BAZ",
		-1: "NEG",
	}
	TestAllTypesProto3_NestedEnum_value = map[string]int32{
		"FOO": 0,
		"BAR": 1,
		"BAZ": 2,
		"NEG": -1,
	}
)

func (x TestAllTypesProto3_NestedEnum) Enum() *TestAllTypesProto3_NestedEnum {
	p := new(TestAllTypesProto3_NestedEnum)
	*p = x
	return p
}

func (x TestAllTypesProto3_NestedEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TestAllTypesProto3_NestedEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_testprotos_editionsfuzztest_test3_proto_enumTypes[1].Descriptor()
}

func (TestAllTypesProto3_NestedEnum) Type() protoreflect.EnumType {
	return &file_internal_testprotos_editionsfuzztest_test3_proto_enumTypes[1]
}

func (x TestAllTypesProto3_NestedEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TestAllTypesProto3_NestedEnum.Descriptor instead.
func (TestAllTypesProto3_NestedEnum) EnumDescriptor() ([]byte, []int) {
	return file_internal_testprotos_editionsfuzztest_test3_proto_rawDescGZIP(), []int{0, 0}
}

type TestAllTypesProto3 struct {
	state                  protoimpl.MessageState                       `protogen:"open.v1"`
	SingularInt32          int32                                        `protobuf:"varint,81,opt,name=singular_int32,json=singularInt32,proto3" json:"singular_int32,omitempty"`
	SingularInt64          int64                                        `protobuf:"varint,82,opt,name=singular_int64,json=singularInt64,proto3" json:"singular_int64,omitempty"`
	SingularUint32         uint32                                       `protobuf:"varint,83,opt,name=singular_uint32,json=singularUint32,proto3" json:"singular_uint32,omitempty"`
	SingularUint64         uint64                                       `protobuf:"varint,84,opt,name=singular_uint64,json=singularUint64,proto3" json:"singular_uint64,omitempty"`
	SingularSint32         int32                                        `protobuf:"zigzag32,85,opt,name=singular_sint32,json=singularSint32,proto3" json:"singular_sint32,omitempty"`
	SingularSint64         int64                                        `protobuf:"zigzag64,86,opt,name=singular_sint64,json=singularSint64,proto3" json:"singular_sint64,omitempty"`
	SingularFixed32        uint32                                       `protobuf:"fixed32,87,opt,name=singular_fixed32,json=singularFixed32,proto3" json:"singular_fixed32,omitempty"`
	SingularFixed64        uint64                                       `protobuf:"fixed64,88,opt,name=singular_fixed64,json=singularFixed64,proto3" json:"singular_fixed64,omitempty"`
	SingularSfixed32       int32                                        `protobuf:"fixed32,89,opt,name=singular_sfixed32,json=singularSfixed32,proto3" json:"singular_sfixed32,omitempty"`
	SingularSfixed64       int64                                        `protobuf:"fixed64,90,opt,name=singular_sfixed64,json=singularSfixed64,proto3" json:"singular_sfixed64,omitempty"`
	SingularFloat          float32                                      `protobuf:"fixed32,91,opt,name=singular_float,json=singularFloat,proto3" json:"singular_float,omitempty"`
	SingularDouble         float64                                      `protobuf:"fixed64,92,opt,name=singular_double,json=singularDouble,proto3" json:"singular_double,omitempty"`
	SingularBool           bool                                         `protobuf:"varint,93,opt,name=singular_bool,json=singularBool,proto3" json:"singular_bool,omitempty"`
	SingularString         string                                       `protobuf:"bytes,94,opt,name=singular_string,json=singularString,proto3" json:"singular_string,omitempty"`
	SingularBytes          []byte                                       `protobuf:"bytes,95,opt,name=singular_bytes,json=singularBytes,proto3" json:"singular_bytes,omitempty"`
	SingularNestedMessage  *TestAllTypesProto3_NestedMessage            `protobuf:"bytes,98,opt,name=singular_nested_message,json=singularNestedMessage,proto3" json:"singular_nested_message,omitempty"`
	SingularForeignMessage *ForeignMessageProto3                        `protobuf:"bytes,99,opt,name=singular_foreign_message,json=singularForeignMessage,proto3" json:"singular_foreign_message,omitempty"`
	SingularNestedEnum     TestAllTypesProto3_NestedEnum                `protobuf:"varint,101,opt,name=singular_nested_enum,json=singularNestedEnum,proto3,enum=goproto.proto.test.TestAllTypesProto3_NestedEnum" json:"singular_nested_enum,omitempty"`
	SingularForeignEnum    ForeignEnumProto3                            `protobuf:"varint,102,opt,name=singular_foreign_enum,json=singularForeignEnum,proto3,enum=goproto.proto.test.ForeignEnumProto3" json:"singular_foreign_enum,omitempty"`
	OptionalInt32          *int32                                       `protobuf:"varint,1,opt,name=optional_int32,json=optionalInt32,proto3,oneof" json:"optional_int32,omitempty"`
	OptionalInt64          *int64                                       `protobuf:"varint,2,opt,name=optional_int64,json=optionalInt64,proto3,oneof" json:"optional_int64,omitempty"`
	OptionalUint32         *uint32                                      `protobuf:"varint,3,opt,name=optional_uint32,json=optionalUint32,proto3,oneof" json:"optional_uint32,omitempty"`
	OptionalUint64         *uint64                                      `protobuf:"varint,4,opt,name=optional_uint64,json=optionalUint64,proto3,oneof" json:"optional_uint64,omitempty"`
	OptionalSint32         *int32                                       `protobuf:"zigzag32,5,opt,name=optional_sint32,json=optionalSint32,proto3,oneof" json:"optional_sint32,omitempty"`
	OptionalSint64         *int64                                       `protobuf:"zigzag64,6,opt,name=optional_sint64,json=optionalSint64,proto3,oneof" json:"optional_sint64,omitempty"`
	OptionalFixed32        *uint32                                      `protobuf:"fixed32,7,opt,name=optional_fixed32,json=optionalFixed32,proto3,oneof" json:"optional_fixed32,omitempty"`
	OptionalFixed64        *uint64                                      `protobuf:"fixed64,8,opt,name=optional_fixed64,json=optionalFixed64,proto3,oneof" json:"optional_fixed64,omitempty"`
	OptionalSfixed32       *int32                                       `protobuf:"fixed32,9,opt,name=optional_sfixed32,json=optionalSfixed32,proto3,oneof" json:"optional_sfixed32,omitempty"`
	OptionalSfixed64       *int64                                       `protobuf:"fixed64,10,opt,name=optional_sfixed64,json=optionalSfixed64,proto3,oneof" json:"optional_sfixed64,omitempty"`
	OptionalFloat          *float32                                     `protobuf:"fixed32,11,opt,name=optional_float,json=optionalFloat,proto3,oneof" json:"optional_float,omitempty"`
	OptionalDouble         *float64                                     `protobuf:"fixed64,12,opt,name=optional_double,json=optionalDouble,proto3,oneof" json:"optional_double,omitempty"`
	OptionalBool           *bool                                        `protobuf:"varint,13,opt,name=optional_bool,json=optionalBool,proto3,oneof" json:"optional_bool,omitempty"`
	OptionalString         *string                                      `protobuf:"bytes,14,opt,name=optional_string,json=optionalString,proto3,oneof" json:"optional_string,omitempty"`
	OptionalBytes          []byte                                       `protobuf:"bytes,15,opt,name=optional_bytes,json=optionalBytes,proto3,oneof" json:"optional_bytes,omitempty"`
	OptionalNestedMessage  *TestAllTypesProto3_NestedMessage            `protobuf:"bytes,18,opt,name=optional_nested_message,json=optionalNestedMessage,proto3,oneof" json:"optional_nested_message,omitempty"`
	OptionalForeignMessage *ForeignMessageProto3                        `protobuf:"bytes,19,opt,name=optional_foreign_message,json=optionalForeignMessage,proto3,oneof" json:"optional_foreign_message,omitempty"`
	OptionalNestedEnum     *TestAllTypesProto3_NestedEnum               `protobuf:"varint,21,opt,name=optional_nested_enum,json=optionalNestedEnum,proto3,enum=goproto.proto.test.TestAllTypesProto3_NestedEnum,oneof" json:"optional_nested_enum,omitempty"`
	OptionalForeignEnum    *ForeignEnumProto3                           `protobuf:"varint,22,opt,name=optional_foreign_enum,json=optionalForeignEnum,proto3,enum=goproto.proto.test.ForeignEnumProto3,oneof" json:"optional_foreign_enum,omitempty"`
	RepeatedInt32          []int32                                      `protobuf:"varint,31,rep,packed,name=repeated_int32,json=repeatedInt32,proto3" json:"repeated_int32,omitempty"`
	RepeatedInt64          []int64                                      `protobuf:"varint,32,rep,packed,name=repeated_int64,json=repeatedInt64,proto3" json:"repeated_int64,omitempty"`
	RepeatedUint32         []uint32                                     `protobuf:"varint,33,rep,packed,name=repeated_uint32,json=repeatedUint32,proto3" json:"repeated_uint32,omitempty"`
	RepeatedUint64         []uint64                                     `protobuf:"varint,34,rep,packed,name=repeated_uint64,json=repeatedUint64,proto3" json:"repeated_uint64,omitempty"`
	RepeatedSint32         []int32                                      `protobuf:"zigzag32,35,rep,packed,name=repeated_sint32,json=repeatedSint32,proto3" json:"repeated_sint32,omitempty"`
	RepeatedSint64         []int64                                      `protobuf:"zigzag64,36,rep,packed,name=repeated_sint64,json=repeatedSint64,proto3" json:"repeated_sint64,omitempty"`
	RepeatedFixed32        []uint32                                     `protobuf:"fixed32,37,rep,packed,name=repeated_fixed32,json=repeatedFixed32,proto3" json:"repeated_fixed32,omitempty"`
	RepeatedFixed64        []uint64                                     `protobuf:"fixed64,38,rep,packed,name=repeated_fixed64,json=repeatedFixed64,proto3" json:"repeated_fixed64,omitempty"`
	RepeatedSfixed32       []int32                                      `protobuf:"fixed32,39,rep,packed,name=repeated_sfixed32,json=repeatedSfixed32,proto3" json:"repeated_sfixed32,omitempty"`
	RepeatedSfixed64       []int64                                      `protobuf:"fixed64,40,rep,packed,name=repeated_sfixed64,json=repeatedSfixed64,proto3" json:"repeated_sfixed64,omitempty"`
	RepeatedFloat          []float32                                    `protobuf:"fixed32,41,rep,packed,name=repeated_float,json=repeatedFloat,proto3" json:"repeated_float,omitempty"`
	RepeatedDouble         []float64                                    `protobuf:"fixed64,42,rep,packed,name=repeated_double,json=repeatedDouble,proto3" json:"repeated_double,omitempty"`
	RepeatedBool           []bool                                       `protobuf:"varint,43,rep,packed,name=repeated_bool,json=repeatedBool,proto3" json:"repeated_bool,omitempty"`
	RepeatedString         []string                                     `protobuf:"bytes,44,rep,name=repeated_string,json=repeatedString,proto3" json:"repeated_string,omitempty"`
	RepeatedBytes          [][]byte                                     `protobuf:"bytes,45,rep,name=repeated_bytes,json=repeatedBytes,proto3" json:"repeated_bytes,omitempty"`
	RepeatedNestedMessage  []*TestAllTypesProto3_NestedMessage          `protobuf:"bytes,48,rep,name=repeated_nested_message,json=repeatedNestedMessage,proto3" json:"repeated_nested_message,omitempty"`
	RepeatedForeignMessage []*ForeignMessageProto3                      `protobuf:"bytes,49,rep,name=repeated_foreign_message,json=repeatedForeignMessage,proto3" json:"repeated_foreign_message,omitempty"`
	RepeatedNestedEnum     []TestAllTypesProto3_NestedEnum              `protobuf:"varint,51,rep,packed,name=repeated_nested_enum,json=repeatedNestedEnum,proto3,enum=goproto.proto.test.TestAllTypesProto3_NestedEnum" json:"repeated_nested_enum,omitempty"`
	RepeatedForeignEnum    []ForeignEnumProto3                          `protobuf:"varint,52,rep,packed,name=repeated_foreign_enum,json=repeatedForeignEnum,proto3,enum=goproto.proto.test.ForeignEnumProto3" json:"repeated_foreign_enum,omitempty"`
	MapInt32Int32          map[int32]int32                              `protobuf:"bytes,56,rep,name=map_int32_int32,json=mapInt32Int32,proto3" json:"map_int32_int32,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	MapInt64Int64          map[int64]int64                              `protobuf:"bytes,57,rep,name=map_int64_int64,json=mapInt64Int64,proto3" json:"map_int64_int64,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	MapUint32Uint32        map[uint32]uint32                            `protobuf:"bytes,58,rep,name=map_uint32_uint32,json=mapUint32Uint32,proto3" json:"map_uint32_uint32,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	MapUint64Uint64        map[uint64]uint64                            `protobuf:"bytes,59,rep,name=map_uint64_uint64,json=mapUint64Uint64,proto3" json:"map_uint64_uint64,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	MapSint32Sint32        map[int32]int32                              `protobuf:"bytes,60,rep,name=map_sint32_sint32,json=mapSint32Sint32,proto3" json:"map_sint32_sint32,omitempty" protobuf_key:"zigzag32,1,opt,name=key" protobuf_val:"zigzag32,2,opt,name=value"`
	MapSint64Sint64        map[int64]int64                              `protobuf:"bytes,61,rep,name=map_sint64_sint64,json=mapSint64Sint64,proto3" json:"map_sint64_sint64,omitempty" protobuf_key:"zigzag64,1,opt,name=key" protobuf_val:"zigzag64,2,opt,name=value"`
	MapFixed32Fixed32      map[uint32]uint32                            `protobuf:"bytes,62,rep,name=map_fixed32_fixed32,json=mapFixed32Fixed32,proto3" json:"map_fixed32_fixed32,omitempty" protobuf_key:"fixed32,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"`
	MapFixed64Fixed64      map[uint64]uint64                            `protobuf:"bytes,63,rep,name=map_fixed64_fixed64,json=mapFixed64Fixed64,proto3" json:"map_fixed64_fixed64,omitempty" protobuf_key:"fixed64,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	MapSfixed32Sfixed32    map[int32]int32                              `protobuf:"bytes,64,rep,name=map_sfixed32_sfixed32,json=mapSfixed32Sfixed32,proto3" json:"map_sfixed32_sfixed32,omitempty" protobuf_key:"fixed32,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"`
	MapSfixed64Sfixed64    map[int64]int64                              `protobuf:"bytes,65,rep,name=map_sfixed64_sfixed64,json=mapSfixed64Sfixed64,proto3" json:"map_sfixed64_sfixed64,omitempty" protobuf_key:"fixed64,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	MapInt32Float          map[int32]float32                            `protobuf:"bytes,66,rep,name=map_int32_float,json=mapInt32Float,proto3" json:"map_int32_float,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"`
	MapInt32Double         map[int32]float64                            `protobuf:"bytes,67,rep,name=map_int32_double,json=mapInt32Double,proto3" json:"map_int32_double,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	MapBoolBool            map[bool]bool                                `protobuf:"bytes,68,rep,name=map_bool_bool,json=mapBoolBool,proto3" json:"map_bool_bool,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	MapStringString        map[string]string                            `protobuf:"bytes,69,rep,name=map_string_string,json=mapStringString,proto3" json:"map_string_string,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	MapStringBytes         map[string][]byte                            `protobuf:"bytes,70,rep,name=map_string_bytes,json=mapStringBytes,proto3" json:"map_string_bytes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	MapStringNestedMessage map[string]*TestAllTypesProto3_NestedMessage `protobuf:"bytes,71,rep,name=map_string_nested_message,json=mapStringNestedMessage,proto3" json:"map_string_nested_message,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	MapStringNestedEnum    map[string]TestAllTypesProto3_NestedEnum     `protobuf:"bytes,73,rep,name=map_string_nested_enum,json=mapStringNestedEnum,proto3" json:"map_string_nested_enum,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value,enum=goproto.proto.test.TestAllTypesProto3_NestedEnum"`
	// Types that are valid to be assigned to OneofField:
	//
	//	*TestAllTypesProto3_OneofUint32
	//	*TestAllTypesProto3_OneofNestedMessage
	//	*TestAllTypesProto3_OneofString
	//	*TestAllTypesProto3_OneofBytes
	//	*TestAllTypesProto3_OneofBool
	//	*TestAllTypesProto3_OneofUint64
	//	*TestAllTypesProto3_OneofFloat
	//	*TestAllTypesProto3_OneofDouble
	//	*TestAllTypesProto3_OneofEnum
	OneofField    isTestAllTypesProto3_OneofField `protobuf_oneof:"oneof_field"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestAllTypesProto3) Reset() {
	*x = TestAllTypesProto3{}
	mi := &file_internal_testprotos_editionsfuzztest_test3_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestAllTypesProto3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestAllTypesProto3) ProtoMessage() {}

func (x *TestAllTypesProto3) ProtoReflect() protoreflect.Message {
	mi := &file_internal_testprotos_editionsfuzztest_test3_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestAllTypesProto3.ProtoReflect.Descriptor instead.
func (*TestAllTypesProto3) Descriptor() ([]byte, []int) {
	return file_internal_testprotos_editionsfuzztest_test3_proto_rawDescGZIP(), []int{0}
}

func (x *TestAllTypesProto3) GetSingularInt32() int32 {
	if x != nil {
		return x.SingularInt32
	}
	return 0
}

func (x *TestAllTypesProto3) GetSingularInt64() int64 {
	if x != nil {
		return x.SingularInt64
	}
	return 0
}

func (x *TestAllTypesProto3) GetSingularUint32() uint32 {
	if x != nil {
		return x.SingularUint32
	}
	return 0
}

func (x *TestAllTypesProto3) GetSingularUint64() uint64 {
	if x != nil {
		return x.SingularUint64
	}
	return 0
}

func (x *TestAllTypesProto3) GetSingularSint32() int32 {
	if x != nil {
		return x.SingularSint32
	}
	return 0
}

func (x *TestAllTypesProto3) GetSingularSint64() int64 {
	if x != nil {
		return x.SingularSint64
	}
	return 0
}

func (x *TestAllTypesProto3) GetSingularFixed32() uint32 {
	if x != nil {
		return x.SingularFixed32
	}
	return 0
}

func (x *TestAllTypesProto3) GetSingularFixed64() uint64 {
	if x != nil {
		return x.SingularFixed64
	}
	return 0
}

func (x *TestAllTypesProto3) GetSingularSfixed32() int32 {
	if x != nil {
		return x.SingularSfixed32
	}
	return 0
}

func (x *TestAllTypesProto3) GetSingularSfixed64() int64 {
	if x != nil {
		return x.SingularSfixed64
	}
	return 0
}

func (x *TestAllTypesProto3) GetSingularFloat() float32 {
	if x != nil {
		return x.SingularFloat
	}
	return 0
}

func (x *TestAllTypesProto3) GetSingularDouble() float64 {
	if x != nil {
		return x.SingularDouble
	}
	return 0
}

func (x *TestAllTypesProto3) GetSingularBool() bool {
	if x != nil {
		return x.SingularBool
	}
	return false
}

func (x *TestAllTypesProto3) GetSingularString() string {
	if x != nil {
		return x.SingularString
	}
	return ""
}

func (x *TestAllTypesProto3) GetSingularBytes() []byte {
	if x != nil {
		return x.SingularBytes
	}
	return nil
}

func (x *TestAllTypesProto3) GetSingularNestedMessage() *TestAllTypesProto3_NestedMessage {
	if x != nil {
		return x.SingularNestedMessage
	}
	return nil
}

func (x *TestAllTypesProto3) GetSingularForeignMessage() *ForeignMessageProto3 {
	if x != nil {
		return x.SingularForeignMessage
	}
	return nil
}

func (x *TestAllTypesProto3) GetSingularNestedEnum() TestAllTypesProto3_NestedEnum {
	if x != nil {
		return x.SingularNestedEnum
	}
	return TestAllTypesProto3_FOO
}

func (x *TestAllTypesProto3) GetSingularForeignEnum() ForeignEnumProto3 {
	if x != nil {
		return x.SingularForeignEnum
	}
	return ForeignEnumProto3_FOREIGN_PROTO3_ZERO
}

func (x *TestAllTypesProto3) GetOptionalInt32() int32 {
	if x != nil && x.OptionalInt32 != nil {
		return *x.OptionalInt32
	}
	return 0
}

func (x *TestAllTypesProto3) GetOptionalInt64() int64 {
	if x != nil && x.OptionalInt64 != nil {
		return *x.OptionalInt64
	}
	return 0
}

func (x *TestAllTypesProto3) GetOptionalUint32() uint32 {
	if x != nil && x.OptionalUint32 != nil {
		return *x.OptionalUint32
	}
	return 0
}

func (x *TestAllTypesProto3) GetOptionalUint64() uint64 {
	if x != nil && x.OptionalUint64 != nil {
		return *x.OptionalUint64
	}
	return 0
}

func (x *TestAllTypesProto3) GetOptionalSint32() int32 {
	if x != nil && x.OptionalSint32 != nil {
		return *x.OptionalSint32
	}
	return 0
}

func (x *TestAllTypesProto3) GetOptionalSint64() int64 {
	if x != nil && x.OptionalSint64 != nil {
		return *x.OptionalSint64
	}
	return 0
}

func (x *TestAllTypesProto3) GetOptionalFixed32() uint32 {
	if x != nil && x.OptionalFixed32 != nil {
		return *x.OptionalFixed32
	}
	return 0
}

func (x *TestAllTypesProto3) GetOptionalFixed64() uint64 {
	if x != nil && x.OptionalFixed64 != nil {
		return *x.OptionalFixed64
	}
	return 0
}

func (x *TestAllTypesProto3) GetOptionalSfixed32() int32 {
	if x != nil && x.OptionalSfixed32 != nil {
		return *x.OptionalSfixed32
	}
	return 0
}

func (x *TestAllTypesProto3) GetOptionalSfixed64() int64 {
	if x != nil && x.OptionalSfixed64 != nil {
		return *x.OptionalSfixed64
	}
	return 0
}

func (x *TestAllTypesProto3) GetOptionalFloat() float32 {
	if x != nil && x.OptionalFloat != nil {
		return *x.OptionalFloat
	}
	return 0
}

func (x *TestAllTypesProto3) GetOptionalDouble() float64 {
	if x != nil && x.OptionalDouble != nil {
		return *x.OptionalDouble
	}
	return 0
}

func (x *TestAllTypesProto3) GetOptionalBool() bool {
	if x != nil && x.OptionalBool != nil {
		return *x.OptionalBool
	}
	return false
}

func (x *TestAllTypesProto3) GetOptionalString() string {
	if x != nil && x.OptionalString != nil {
		return *x.OptionalString
	}
	return ""
}

func (x *TestAllTypesProto3) GetOptionalBytes() []byte {
	if x != nil {
		return x.OptionalBytes
	}
	return nil
}

func (x *TestAllTypesProto3) GetOptionalNestedMessage() *TestAllTypesProto3_NestedMessage {
	if x != nil {
		return x.OptionalNestedMessage
	}
	return nil
}

func (x *TestAllTypesProto3) GetOptionalForeignMessage() *ForeignMessageProto3 {
	if x != nil {
		return x.OptionalForeignMessage
	}
	return nil
}

func (x *TestAllTypesProto3) GetOptionalNestedEnum() TestAllTypesProto3_NestedEnum {
	if x != nil && x.OptionalNestedEnum != nil {
		return *x.OptionalNestedEnum
	}
	return TestAllTypesProto3_FOO
}

func (x *TestAllTypesProto3) GetOptionalForeignEnum() ForeignEnumProto3 {
	if x != nil && x.OptionalForeignEnum != nil {
		return *x.OptionalForeignEnum
	}
	return ForeignEnumProto3_FOREIGN_PROTO3_ZERO
}

func (x *TestAllTypesProto3) GetRepeatedInt32() []int32 {
	if x != nil {
		return x.RepeatedInt32
	}
	return nil
}

func (x *TestAllTypesProto3) GetRepeatedInt64() []int64 {
	if x != nil {
		return x.RepeatedInt64
	}
	return nil
}

func (x *TestAllTypesProto3) GetRepeatedUint32() []uint32 {
	if x != nil {
		return x.RepeatedUint32
	}
	return nil
}

func (x *TestAllTypesProto3) GetRepeatedUint64() []uint64 {
	if x != nil {
		return x.RepeatedUint64
	}
	return nil
}

func (x *TestAllTypesProto3) GetRepeatedSint32() []int32 {
	if x != nil {
		return x.RepeatedSint32
	}
	return nil
}

func (x *TestAllTypesProto3) GetRepeatedSint64() []int64 {
	if x != nil {
		return x.RepeatedSint64
	}
	return nil
}

func (x *TestAllTypesProto3) GetRepeatedFixed32() []uint32 {
	if x != nil {
		return x.RepeatedFixed32
	}
	return nil
}

func (x *TestAllTypesProto3) GetRepeatedFixed64() []uint64 {
	if x != nil {
		return x.RepeatedFixed64
	}
	return nil
}

func (x *TestAllTypesProto3) GetRepeatedSfixed32() []int32 {
	if x != nil {
		return x.RepeatedSfixed32
	}
	return nil
}

func (x *TestAllTypesProto3) GetRepeatedSfixed64() []int64 {
	if x != nil {
		return x.RepeatedSfixed64
	}
	return nil
}

func (x *TestAllTypesProto3) GetRepeatedFloat() []float32 {
	if x != nil {
		return x.RepeatedFloat
	}
	return nil
}

func (x *TestAllTypesProto3) GetRepeatedDouble() []float64 {
	if x != nil {
		return x.RepeatedDouble
	}
	return nil
}

func (x *TestAllTypesProto3) GetRepeatedBool() []bool {
	if x != nil {
		return x.RepeatedBool
	}
	return nil
}

func (x *TestAllTypesProto3) GetRepeatedString() []string {
	if x != nil {
		return x.RepeatedString
	}
	return nil
}

func (x *TestAllTypesProto3) GetRepeatedBytes() [][]byte {
	if x != nil {
		return x.RepeatedBytes
	}
	return nil
}

func (x *TestAllTypesProto3) GetRepeatedNestedMessage() []*TestAllTypesProto3_NestedMessage {
	if x != nil {
		return x.RepeatedNestedMessage
	}
	return nil
}

func (x *TestAllTypesProto3) GetRepeatedForeignMessage() []*ForeignMessageProto3 {
	if x != nil {
		return x.RepeatedForeignMessage
	}
	return nil
}

func (x *TestAllTypesProto3) GetRepeatedNestedEnum() []TestAllTypesProto3_NestedEnum {
	if x != nil {
		return x.RepeatedNestedEnum
	}
	return nil
}

func (x *TestAllTypesProto3) GetRepeatedForeignEnum() []ForeignEnumProto3 {
	if x != nil {
		return x.RepeatedForeignEnum
	}
	return nil
}

func (x *TestAllTypesProto3) GetMapInt32Int32() map[int32]int32 {
	if x != nil {
		return x.MapInt32Int32
	}
	return nil
}

func (x *TestAllTypesProto3) GetMapInt64Int64() map[int64]int64 {
	if x != nil {
		return x.MapInt64Int64
	}
	return nil
}

func (x *TestAllTypesProto3) GetMapUint32Uint32() map[uint32]uint32 {
	if x != nil {
		return x.MapUint32Uint32
	}
	return nil
}

func (x *TestAllTypesProto3) GetMapUint64Uint64() map[uint64]uint64 {
	if x != nil {
		return x.MapUint64Uint64
	}
	return nil
}

func (x *TestAllTypesProto3) GetMapSint32Sint32() map[int32]int32 {
	if x != nil {
		return x.MapSint32Sint32
	}
	return nil
}

func (x *TestAllTypesProto3) GetMapSint64Sint64() map[int64]int64 {
	if x != nil {
		return x.MapSint64Sint64
	}
	return nil
}

func (x *TestAllTypesProto3) GetMapFixed32Fixed32() map[uint32]uint32 {
	if x != nil {
		return x.MapFixed32Fixed32
	}
	return nil
}

func (x *TestAllTypesProto3) GetMapFixed64Fixed64() map[uint64]uint64 {
	if x != nil {
		return x.MapFixed64Fixed64
	}
	return nil
}

func (x *TestAllTypesProto3) GetMapSfixed32Sfixed32() map[int32]int32 {
	if x != nil {
		return x.MapSfixed32Sfixed32
	}
	return nil
}

func (x *TestAllTypesProto3) GetMapSfixed64Sfixed64() map[int64]int64 {
	if x != nil {
		return x.MapSfixed64Sfixed64
	}
	return nil
}

func (x *TestAllTypesProto3) GetMapInt32Float() map[int32]float32 {
	if x != nil {
		return x.MapInt32Float
	}
	return nil
}

func (x *TestAllTypesProto3) GetMapInt32Double() map[int32]float64 {
	if x != nil {
		return x.MapInt32Double
	}
	return nil
}

func (x *TestAllTypesProto3) GetMapBoolBool() map[bool]bool {
	if x != nil {
		return x.MapBoolBool
	}
	return nil
}

func (x *TestAllTypesProto3) GetMapStringString() map[string]string {
	if x != nil {
		return x.MapStringString
	}
	return nil
}

func (x *TestAllTypesProto3) GetMapStringBytes() map[string][]byte {
	if x != nil {
		return x.MapStringBytes
	}
	return nil
}

func (x *TestAllTypesProto3) GetMapStringNestedMessage() map[string]*TestAllTypesProto3_NestedMessage {
	if x != nil {
		return x.MapStringNestedMessage
	}
	return nil
}

func (x *TestAllTypesProto3) GetMapStringNestedEnum() map[string]TestAllTypesProto3_NestedEnum {
	if x != nil {
		return x.MapStringNestedEnum
	}
	return nil
}

func (x *TestAllTypesProto3) GetOneofField() isTestAllTypesProto3_OneofField {
	if x != nil {
		return x.OneofField
	}
	return nil
}

func (x *TestAllTypesProto3) GetOneofUint32() uint32 {
	if x != nil {
		if x, ok := x.OneofField.(*TestAllTypesProto3_OneofUint32); ok {
			return x.OneofUint32
		}
	}
	return 0
}

func (x *TestAllTypesProto3) GetOneofNestedMessage() *TestAllTypesProto3_NestedMessage {
	if x != nil {
		if x, ok := x.OneofField.(*TestAllTypesProto3_OneofNestedMessage); ok {
			return x.OneofNestedMessage
		}
	}
	return nil
}

func (x *TestAllTypesProto3) GetOneofString() string {
	if x != nil {
		if x, ok := x.OneofField.(*TestAllTypesProto3_OneofString); ok {
			return x.OneofString
		}
	}
	return ""
}

func (x *TestAllTypesProto3) GetOneofBytes() []byte {
	if x != nil {
		if x, ok := x.OneofField.(*TestAllTypesProto3_OneofBytes); ok {
			return x.OneofBytes
		}
	}
	return nil
}

func (x *TestAllTypesProto3) GetOneofBool() bool {
	if x != nil {
		if x, ok := x.OneofField.(*TestAllTypesProto3_OneofBool); ok {
			return x.OneofBool
		}
	}
	return false
}

func (x *TestAllTypesProto3) GetOneofUint64() uint64 {
	if x != nil {
		if x, ok := x.OneofField.(*TestAllTypesProto3_OneofUint64); ok {
			return x.OneofUint64
		}
	}
	return 0
}

func (x *TestAllTypesProto3) GetOneofFloat() float32 {
	if x != nil {
		if x, ok := x.OneofField.(*TestAllTypesProto3_OneofFloat); ok {
			return x.OneofFloat
		}
	}
	return 0
}

func (x *TestAllTypesProto3) GetOneofDouble() float64 {
	if x != nil {
		if x, ok := x.OneofField.(*TestAllTypesProto3_OneofDouble); ok {
			return x.OneofDouble
		}
	}
	return 0
}

func (x *TestAllTypesProto3) GetOneofEnum() TestAllTypesProto3_NestedEnum {
	if x != nil {
		if x, ok := x.OneofField.(*TestAllTypesProto3_OneofEnum); ok {
			return x.OneofEnum
		}
	}
	return TestAllTypesProto3_FOO
}

type isTestAllTypesProto3_OneofField interface {
	isTestAllTypesProto3_OneofField()
}

type TestAllTypesProto3_OneofUint32 struct {
	OneofUint32 uint32 `protobuf:"varint,111,opt,name=oneof_uint32,json=oneofUint32,proto3,oneof"`
}

type TestAllTypesProto3_OneofNestedMessage struct {
	OneofNestedMessage *TestAllTypesProto3_NestedMessage `protobuf:"bytes,112,opt,name=oneof_nested_message,json=oneofNestedMessage,proto3,oneof"`
}

type TestAllTypesProto3_OneofString struct {
	OneofString string `protobuf:"bytes,113,opt,name=oneof_string,json=oneofString,proto3,oneof"`
}

type TestAllTypesProto3_OneofBytes struct {
	OneofBytes []byte `protobuf:"bytes,114,opt,name=oneof_bytes,json=oneofBytes,proto3,oneof"`
}

type TestAllTypesProto3_OneofBool struct {
	OneofBool bool `protobuf:"varint,115,opt,name=oneof_bool,json=oneofBool,proto3,oneof"`
}

type TestAllTypesProto3_OneofUint64 struct {
	OneofUint64 uint64 `protobuf:"varint,116,opt,name=oneof_uint64,json=oneofUint64,proto3,oneof"`
}

type TestAllTypesProto3_OneofFloat struct {
	OneofFloat float32 `protobuf:"fixed32,117,opt,name=oneof_float,json=oneofFloat,proto3,oneof"`
}

type TestAllTypesProto3_OneofDouble struct {
	OneofDouble float64 `protobuf:"fixed64,118,opt,name=oneof_double,json=oneofDouble,proto3,oneof"`
}

type TestAllTypesProto3_OneofEnum struct {
	OneofEnum TestAllTypesProto3_NestedEnum `protobuf:"varint,119,opt,name=oneof_enum,json=oneofEnum,proto3,enum=goproto.proto.test.TestAllTypesProto3_NestedEnum,oneof"`
}

func (*TestAllTypesProto3_OneofUint32) isTestAllTypesProto3_OneofField() {}

func (*TestAllTypesProto3_OneofNestedMessage) isTestAllTypesProto3_OneofField() {}

func (*TestAllTypesProto3_OneofString) isTestAllTypesProto3_OneofField() {}

func (*TestAllTypesProto3_OneofBytes) isTestAllTypesProto3_OneofField() {}

func (*TestAllTypesProto3_OneofBool) isTestAllTypesProto3_OneofField() {}

func (*TestAllTypesProto3_OneofUint64) isTestAllTypesProto3_OneofField() {}

func (*TestAllTypesProto3_OneofFloat) isTestAllTypesProto3_OneofField() {}

func (*TestAllTypesProto3_OneofDouble) isTestAllTypesProto3_OneofField() {}

func (*TestAllTypesProto3_OneofEnum) isTestAllTypesProto3_OneofField() {}

type ForeignMessageProto3 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	C             int32                  `protobuf:"varint,1,opt,name=c,proto3" json:"c,omitempty"`
	D             int32                  `protobuf:"varint,2,opt,name=d,proto3" json:"d,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ForeignMessageProto3) Reset() {
	*x = ForeignMessageProto3{}
	mi := &file_internal_testprotos_editionsfuzztest_test3_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ForeignMessageProto3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForeignMessageProto3) ProtoMessage() {}

func (x *ForeignMessageProto3) ProtoReflect() protoreflect.Message {
	mi := &file_internal_testprotos_editionsfuzztest_test3_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForeignMessageProto3.ProtoReflect.Descriptor instead.
func (*ForeignMessageProto3) Descriptor() ([]byte, []int) {
	return file_internal_testprotos_editionsfuzztest_test3_proto_rawDescGZIP(), []int{1}
}

func (x *ForeignMessageProto3) GetC() int32 {
	if x != nil {
		return x.C
	}
	return 0
}

func (x *ForeignMessageProto3) GetD() int32 {
	if x != nil {
		return x.D
	}
	return 0
}

type TestAllTypesProto3_NestedMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	A             int32                  `protobuf:"varint,1,opt,name=a,proto3" json:"a,omitempty"`
	Corecursive   *TestAllTypesProto3    `protobuf:"bytes,2,opt,name=corecursive,proto3" json:"corecursive,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestAllTypesProto3_NestedMessage) Reset() {
	*x = TestAllTypesProto3_NestedMessage{}
	mi := &file_internal_testprotos_editionsfuzztest_test3_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestAllTypesProto3_NestedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestAllTypesProto3_NestedMessage) ProtoMessage() {}

func (x *TestAllTypesProto3_NestedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_internal_testprotos_editionsfuzztest_test3_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestAllTypesProto3_NestedMessage.ProtoReflect.Descriptor instead.
func (*TestAllTypesProto3_NestedMessage) Descriptor() ([]byte, []int) {
	return file_internal_testprotos_editionsfuzztest_test3_proto_rawDescGZIP(), []int{0, 0}
}

func (x *TestAllTypesProto3_NestedMessage) GetA() int32 {
	if x != nil {
		return x.A
	}
	return 0
}

func (x *TestAllTypesProto3_NestedMessage) GetCorecursive() *TestAllTypesProto3 {
	if x != nil {
		return x.Corecursive
	}
	return nil
}

var File_internal_testprotos_editionsfuzztest_test3_proto protoreflect.FileDescriptor

const file_internal_testprotos_editionsfuzztest_test3_proto_rawDesc = "" +
	"\n" +
	"0internal/testprotos/editionsfuzztest/test3.proto\x12\x12goproto.proto.test\"\xf68\n" +
	"\x12TestAllTypesProto3\x12%\n" +
	"\x0esingular_int32\x18Q \x01(\x05R\rsingularInt32\x12%\n" +
	"\x0esingular_int64\x18R \x01(\x03R\rsingularInt64\x12'\n" +
	"\x0fsingular_uint32\x18S \x01(\rR\x0esingularUint32\x12'\n" +
	"\x0fsingular_uint64\x18T \x01(\x04R\x0esingularUint64\x12'\n" +
	"\x0fsingular_sint32\x18U \x01(\x11R\x0esingularSint32\x12'\n" +
	"\x0fsingular_sint64\x18V \x01(\x12R\x0esingularSint64\x12)\n" +
	"\x10singular_fixed32\x18W \x01(\aR\x0fsingularFixed32\x12)\n" +
	"\x10singular_fixed64\x18X \x01(\x06R\x0fsingularFixed64\x12+\n" +
	"\x11singular_sfixed32\x18Y \x01(\x0fR\x10singularSfixed32\x12+\n" +
	"\x11singular_sfixed64\x18Z \x01(\x10R\x10singularSfixed64\x12%\n" +
	"\x0esingular_float\x18[ \x01(\x02R\rsingularFloat\x12'\n" +
	"\x0fsingular_double\x18\\ \x01(\x01R\x0esingularDouble\x12#\n" +
	"\rsingular_bool\x18] \x01(\bR\fsingularBool\x12'\n" +
	"\x0fsingular_string\x18^ \x01(\tR\x0esingularString\x12%\n" +
	"\x0esingular_bytes\x18_ \x01(\fR\rsingularBytes\x12l\n" +
	"\x17singular_nested_message\x18b \x01(\v24.goproto.proto.test.TestAllTypesProto3.NestedMessageR\x15singularNestedMessage\x12b\n" +
	"\x18singular_foreign_message\x18c \x01(\v2(.goproto.proto.test.ForeignMessageProto3R\x16singularForeignMessage\x12c\n" +
	"\x14singular_nested_enum\x18e \x01(\x0e21.goproto.proto.test.TestAllTypesProto3.NestedEnumR\x12singularNestedEnum\x12Y\n" +
	"\x15singular_foreign_enum\x18f \x01(\x0e2%.goproto.proto.test.ForeignEnumProto3R\x13singularForeignEnum\x12*\n" +
	"\x0eoptional_int32\x18\x01 \x01(\x05H\x01R\roptionalInt32\x88\x01\x01\x12*\n" +
	"\x0eoptional_int64\x18\x02 \x01(\x03H\x02R\roptionalInt64\x88\x01\x01\x12,\n" +
	"\x0foptional_uint32\x18\x03 \x01(\rH\x03R\x0eoptionalUint32\x88\x01\x01\x12,\n" +
	"\x0foptional_uint64\x18\x04 \x01(\x04H\x04R\x0eoptionalUint64\x88\x01\x01\x12,\n" +
	"\x0foptional_sint32\x18\x05 \x01(\x11H\x05R\x0eoptionalSint32\x88\x01\x01\x12,\n" +
	"\x0foptional_sint64\x18\x06 \x01(\x12H\x06R\x0eoptionalSint64\x88\x01\x01\x12.\n" +
	"\x10optional_fixed32\x18\a \x01(\aH\aR\x0foptionalFixed32\x88\x01\x01\x12.\n" +
	"\x10optional_fixed64\x18\b \x01(\x06H\bR\x0foptionalFixed64\x88\x01\x01\x120\n" +
	"\x11optional_sfixed32\x18\t \x01(\x0fH\tR\x10optionalSfixed32\x88\x01\x01\x120\n" +
	"\x11optional_sfixed64\x18\n" +
	" \x01(\x10H\n" +
	"R\x10optionalSfixed64\x88\x01\x01\x12*\n" +
	"\x0eoptional_float\x18\v \x01(\x02H\vR\roptionalFloat\x88\x01\x01\x12,\n" +
	"\x0foptional_double\x18\f \x01(\x01H\fR\x0eoptionalDouble\x88\x01\x01\x12(\n" +
	"\roptional_bool\x18\r \x01(\bH\rR\foptionalBool\x88\x01\x01\x12,\n" +
	"\x0foptional_string\x18\x0e \x01(\tH\x0eR\x0eoptionalString\x88\x01\x01\x12*\n" +
	"\x0eoptional_bytes\x18\x0f \x01(\fH\x0fR\roptionalBytes\x88\x01\x01\x12q\n" +
	"\x17optional_nested_message\x18\x12 \x01(\v24.goproto.proto.test.TestAllTypesProto3.NestedMessageH\x10R\x15optionalNestedMessage\x88\x01\x01\x12g\n" +
	"\x18optional_foreign_message\x18\x13 \x01(\v2(.goproto.proto.test.ForeignMessageProto3H\x11R\x16optionalForeignMessage\x88\x01\x01\x12h\n" +
	"\x14optional_nested_enum\x18\x15 \x01(\x0e21.goproto.proto.test.TestAllTypesProto3.NestedEnumH\x12R\x12optionalNestedEnum\x88\x01\x01\x12^\n" +
	"\x15optional_foreign_enum\x18\x16 \x01(\x0e2%.goproto.proto.test.ForeignEnumProto3H\x13R\x13optionalForeignEnum\x88\x01\x01\x12%\n" +
	"\x0erepeated_int32\x18\x1f \x03(\x05R\rrepeatedInt32\x12%\n" +
	"\x0erepeated_int64\x18  \x03(\x03R\rrepeatedInt64\x12'\n" +
	"\x0frepeated_uint32\x18! \x03(\rR\x0erepeatedUint32\x12'\n" +
	"\x0frepeated_uint64\x18\" \x03(\x04R\x0erepeatedUint64\x12'\n" +
	"\x0frepeated_sint32\x18# \x03(\x11R\x0erepeatedSint32\x12'\n" +
	"\x0frepeated_sint64\x18$ \x03(\x12R\x0erepeatedSint64\x12)\n" +
	"\x10repeated_fixed32\x18% \x03(\aR\x0frepeatedFixed32\x12)\n" +
	"\x10repeated_fixed64\x18& \x03(\x06R\x0frepeatedFixed64\x12+\n" +
	"\x11repeated_sfixed32\x18' \x03(\x0fR\x10repeatedSfixed32\x12+\n" +
	"\x11repeated_sfixed64\x18( \x03(\x10R\x10repeatedSfixed64\x12%\n" +
	"\x0erepeated_float\x18) \x03(\x02R\rrepeatedFloat\x12'\n" +
	"\x0frepeated_double\x18* \x03(\x01R\x0erepeatedDouble\x12#\n" +
	"\rrepeated_bool\x18+ \x03(\bR\frepeatedBool\x12'\n" +
	"\x0frepeated_string\x18, \x03(\tR\x0erepeatedString\x12%\n" +
	"\x0erepeated_bytes\x18- \x03(\fR\rrepeatedBytes\x12l\n" +
	"\x17repeated_nested_message\x180 \x03(\v24.goproto.proto.test.TestAllTypesProto3.NestedMessageR\x15repeatedNestedMessage\x12b\n" +
	"\x18repeated_foreign_message\x181 \x03(\v2(.goproto.proto.test.ForeignMessageProto3R\x16repeatedForeignMessage\x12c\n" +
	"\x14repeated_nested_enum\x183 \x03(\x0e21.goproto.proto.test.TestAllTypesProto3.NestedEnumR\x12repeatedNestedEnum\x12Y\n" +
	"\x15repeated_foreign_enum\x184 \x03(\x0e2%.goproto.proto.test.ForeignEnumProto3R\x13repeatedForeignEnum\x12a\n" +
	"\x0fmap_int32_int32\x188 \x03(\v29.goproto.proto.test.TestAllTypesProto3.MapInt32Int32EntryR\rmapInt32Int32\x12a\n" +
	"\x0fmap_int64_int64\x189 \x03(\v29.goproto.proto.test.TestAllTypesProto3.MapInt64Int64EntryR\rmapInt64Int64\x12g\n" +
	"\x11map_uint32_uint32\x18: \x03(\v2;.goproto.proto.test.TestAllTypesProto3.MapUint32Uint32EntryR\x0fmapUint32Uint32\x12g\n" +
	"\x11map_uint64_uint64\x18; \x03(\v2;.goproto.proto.test.TestAllTypesProto3.MapUint64Uint64EntryR\x0fmapUint64Uint64\x12g\n" +
	"\x11map_sint32_sint32\x18< \x03(\v2;.goproto.proto.test.TestAllTypesProto3.MapSint32Sint32EntryR\x0fmapSint32Sint32\x12g\n" +
	"\x11map_sint64_sint64\x18= \x03(\v2;.goproto.proto.test.TestAllTypesProto3.MapSint64Sint64EntryR\x0fmapSint64Sint64\x12m\n" +
	"\x13map_fixed32_fixed32\x18> \x03(\v2=.goproto.proto.test.TestAllTypesProto3.MapFixed32Fixed32EntryR\x11mapFixed32Fixed32\x12m\n" +
	"\x13map_fixed64_fixed64\x18? \x03(\v2=.goproto.proto.test.TestAllTypesProto3.MapFixed64Fixed64EntryR\x11mapFixed64Fixed64\x12s\n" +
	"\x15map_sfixed32_sfixed32\x18@ \x03(\v2?.goproto.proto.test.TestAllTypesProto3.MapSfixed32Sfixed32EntryR\x13mapSfixed32Sfixed32\x12s\n" +
	"\x15map_sfixed64_sfixed64\x18A \x03(\v2?.goproto.proto.test.TestAllTypesProto3.MapSfixed64Sfixed64EntryR\x13mapSfixed64Sfixed64\x12a\n" +
	"\x0fmap_int32_float\x18B \x03(\v29.goproto.proto.test.TestAllTypesProto3.MapInt32FloatEntryR\rmapInt32Float\x12d\n" +
	"\x10map_int32_double\x18C \x03(\v2:.goproto.proto.test.TestAllTypesProto3.MapInt32DoubleEntryR\x0emapInt32Double\x12[\n" +
	"\rmap_bool_bool\x18D \x03(\v27.goproto.proto.test.TestAllTypesProto3.MapBoolBoolEntryR\vmapBoolBool\x12g\n" +
	"\x11map_string_string\x18E \x03(\v2;.goproto.proto.test.TestAllTypesProto3.MapStringStringEntryR\x0fmapStringString\x12d\n" +
	"\x10map_string_bytes\x18F \x03(\v2:.goproto.proto.test.TestAllTypesProto3.MapStringBytesEntryR\x0emapStringBytes\x12}\n" +
	"\x19map_string_nested_message\x18G \x03(\v2B.goproto.proto.test.TestAllTypesProto3.MapStringNestedMessageEntryR\x16mapStringNestedMessage\x12t\n" +
	"\x16map_string_nested_enum\x18I \x03(\v2?.goproto.proto.test.TestAllTypesProto3.MapStringNestedEnumEntryR\x13mapStringNestedEnum\x12#\n" +
	"\foneof_uint32\x18o \x01(\rH\x00R\voneofUint32\x12h\n" +
	"\x14oneof_nested_message\x18p \x01(\v24.goproto.proto.test.TestAllTypesProto3.NestedMessageH\x00R\x12oneofNestedMessage\x12#\n" +
	"\foneof_string\x18q \x01(\tH\x00R\voneofString\x12!\n" +
	"\voneof_bytes\x18r \x01(\fH\x00R\n" +
	"oneofBytes\x12\x1f\n" +
	"\n" +
	"oneof_bool\x18s \x01(\bH\x00R\toneofBool\x12#\n" +
	"\foneof_uint64\x18t \x01(\x04H\x00R\voneofUint64\x12!\n" +
	"\voneof_float\x18u \x01(\x02H\x00R\n" +
	"oneofFloat\x12#\n" +
	"\foneof_double\x18v \x01(\x01H\x00R\voneofDouble\x12R\n" +
	"\n" +
	"oneof_enum\x18w \x01(\x0e21.goproto.proto.test.TestAllTypesProto3.NestedEnumH\x00R\toneofEnum\x1ag\n" +
	"\rNestedMessage\x12\f\n" +
	"\x01a\x18\x01 \x01(\x05R\x01a\x12H\n" +
	"\vcorecursive\x18\x02 \x01(\v2&.goproto.proto.test.TestAllTypesProto3R\vcorecursive\x1a@\n" +
	"\x12MapInt32Int32Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\x1a@\n" +
	"\x12MapInt64Int64Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x03R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\x1aB\n" +
	"\x14MapUint32Uint32Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\rR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\rR\x05value:\x028\x01\x1aB\n" +
	"\x14MapUint64Uint64Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x04R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x04R\x05value:\x028\x01\x1aB\n" +
	"\x14MapSint32Sint32Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x11R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x11R\x05value:\x028\x01\x1aB\n" +
	"\x14MapSint64Sint64Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x12R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x12R\x05value:\x028\x01\x1aD\n" +
	"\x16MapFixed32Fixed32Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\aR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\aR\x05value:\x028\x01\x1aD\n" +
	"\x16MapFixed64Fixed64Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x06R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x06R\x05value:\x028\x01\x1aF\n" +
	"\x18MapSfixed32Sfixed32Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x0fR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x0fR\x05value:\x028\x01\x1aF\n" +
	"\x18MapSfixed64Sfixed64Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x10R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x10R\x05value:\x028\x01\x1a@\n" +
	"\x12MapInt32FloatEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x02R\x05value:\x028\x01\x1aA\n" +
	"\x13MapInt32DoubleEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value:\x028\x01\x1a>\n" +
	"\x10MapBoolBoolEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\bR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\bR\x05value:\x028\x01\x1aB\n" +
	"\x14MapStringStringEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aA\n" +
	"\x13MapStringBytesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01\x1a\x7f\n" +
	"\x1bMapStringNestedMessageEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12J\n" +
	"\x05value\x18\x02 \x01(\v24.goproto.proto.test.TestAllTypesProto3.NestedMessageR\x05value:\x028\x01\x1ay\n" +
	"\x18MapStringNestedEnumEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12G\n" +
	"\x05value\x18\x02 \x01(\x0e21.goproto.proto.test.TestAllTypesProto3.NestedEnumR\x05value:\x028\x01\"9\n" +
	"\n" +
	"NestedEnum\x12\a\n" +
	"\x03FOO\x10\x00\x12\a\n" +
	"\x03BAR\x10\x01\x12\a\n" +
	"\x03BAZ\x10\x02\x12\x10\n" +
	"\x03NEG\x10\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01B\r\n" +
	"\voneof_fieldB\x11\n" +
	"\x0f_optional_int32B\x11\n" +
	"\x0f_optional_int64B\x12\n" +
	"\x10_optional_uint32B\x12\n" +
	"\x10_optional_uint64B\x12\n" +
	"\x10_optional_sint32B\x12\n" +
	"\x10_optional_sint64B\x13\n" +
	"\x11_optional_fixed32B\x13\n" +
	"\x11_optional_fixed64B\x14\n" +
	"\x12_optional_sfixed32B\x14\n" +
	"\x12_optional_sfixed64B\x11\n" +
	"\x0f_optional_floatB\x12\n" +
	"\x10_optional_doubleB\x10\n" +
	"\x0e_optional_boolB\x12\n" +
	"\x10_optional_stringB\x11\n" +
	"\x0f_optional_bytesB\x1a\n" +
	"\x18_optional_nested_messageB\x1b\n" +
	"\x19_optional_foreign_messageB\x17\n" +
	"\x15_optional_nested_enumB\x18\n" +
	"\x16_optional_foreign_enum\"2\n" +
	"\x14ForeignMessageProto3\x12\f\n" +
	"\x01c\x18\x01 \x01(\x05R\x01c\x12\f\n" +
	"\x01d\x18\x02 \x01(\x05R\x01d*t\n" +
	"\x11ForeignEnumProto3\x12\x17\n" +
	"\x13FOREIGN_PROTO3_ZERO\x10\x00\x12\x16\n" +
	"\x12FOREIGN_PROTO3_FOO\x10\x04\x12\x16\n" +
	"\x12FOREIGN_PROTO3_BAR\x10\x05\x12\x16\n" +
	"\x12FOREIGN_PROTO3_BAZ\x10\x06BAZ?google.golang.org/protobuf/internal/testprotos/editionsfuzztestb\x06proto3"

var (
	file_internal_testprotos_editionsfuzztest_test3_proto_rawDescOnce sync.Once
	file_internal_testprotos_editionsfuzztest_test3_proto_rawDescData []byte
)

func file_internal_testprotos_editionsfuzztest_test3_proto_rawDescGZIP() []byte {
	file_internal_testprotos_editionsfuzztest_test3_proto_rawDescOnce.Do(func() {
		file_internal_testprotos_editionsfuzztest_test3_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_internal_testprotos_editionsfuzztest_test3_proto_rawDesc), len(file_internal_testprotos_editionsfuzztest_test3_proto_rawDesc)))
	})
	return file_internal_testprotos_editionsfuzztest_test3_proto_rawDescData
}

var file_internal_testprotos_editionsfuzztest_test3_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_internal_testprotos_editionsfuzztest_test3_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_internal_testprotos_editionsfuzztest_test3_proto_goTypes = []any{
	(ForeignEnumProto3)(0),                   // 0: goproto.proto.test.ForeignEnumProto3
	(TestAllTypesProto3_NestedEnum)(0),       // 1: goproto.proto.test.TestAllTypesProto3.NestedEnum
	(*TestAllTypesProto3)(nil),               // 2: goproto.proto.test.TestAllTypesProto3
	(*ForeignMessageProto3)(nil),             // 3: goproto.proto.test.ForeignMessageProto3
	(*TestAllTypesProto3_NestedMessage)(nil), // 4: goproto.proto.test.TestAllTypesProto3.NestedMessage
	nil,                                      // 5: goproto.proto.test.TestAllTypesProto3.MapInt32Int32Entry
	nil,                                      // 6: goproto.proto.test.TestAllTypesProto3.MapInt64Int64Entry
	nil,                                      // 7: goproto.proto.test.TestAllTypesProto3.MapUint32Uint32Entry
	nil,                                      // 8: goproto.proto.test.TestAllTypesProto3.MapUint64Uint64Entry
	nil,                                      // 9: goproto.proto.test.TestAllTypesProto3.MapSint32Sint32Entry
	nil,                                      // 10: goproto.proto.test.TestAllTypesProto3.MapSint64Sint64Entry
	nil,                                      // 11: goproto.proto.test.TestAllTypesProto3.MapFixed32Fixed32Entry
	nil,                                      // 12: goproto.proto.test.TestAllTypesProto3.MapFixed64Fixed64Entry
	nil,                                      // 13: goproto.proto.test.TestAllTypesProto3.MapSfixed32Sfixed32Entry
	nil,                                      // 14: goproto.proto.test.TestAllTypesProto3.MapSfixed64Sfixed64Entry
	nil,                                      // 15: goproto.proto.test.TestAllTypesProto3.MapInt32FloatEntry
	nil,                                      // 16: goproto.proto.test.TestAllTypesProto3.MapInt32DoubleEntry
	nil,                                      // 17: goproto.proto.test.TestAllTypesProto3.MapBoolBoolEntry
	nil,                                      // 18: goproto.proto.test.TestAllTypesProto3.MapStringStringEntry
	nil,                                      // 19: goproto.proto.test.TestAllTypesProto3.MapStringBytesEntry
	nil,                                      // 20: goproto.proto.test.TestAllTypesProto3.MapStringNestedMessageEntry
	nil,                                      // 21: goproto.proto.test.TestAllTypesProto3.MapStringNestedEnumEntry
}
var file_internal_testprotos_editionsfuzztest_test3_proto_depIdxs = []int32{
	4,  // 0: goproto.proto.test.TestAllTypesProto3.singular_nested_message:type_name -> goproto.proto.test.TestAllTypesProto3.NestedMessage
	3,  // 1: goproto.proto.test.TestAllTypesProto3.singular_foreign_message:type_name -> goproto.proto.test.ForeignMessageProto3
	1,  // 2: goproto.proto.test.TestAllTypesProto3.singular_nested_enum:type_name -> goproto.proto.test.TestAllTypesProto3.NestedEnum
	0,  // 3: goproto.proto.test.TestAllTypesProto3.singular_foreign_enum:type_name -> goproto.proto.test.ForeignEnumProto3
	4,  // 4: goproto.proto.test.TestAllTypesProto3.optional_nested_message:type_name -> goproto.proto.test.TestAllTypesProto3.NestedMessage
	3,  // 5: goproto.proto.test.TestAllTypesProto3.optional_foreign_message:type_name -> goproto.proto.test.ForeignMessageProto3
	1,  // 6: goproto.proto.test.TestAllTypesProto3.optional_nested_enum:type_name -> goproto.proto.test.TestAllTypesProto3.NestedEnum
	0,  // 7: goproto.proto.test.TestAllTypesProto3.optional_foreign_enum:type_name -> goproto.proto.test.ForeignEnumProto3
	4,  // 8: goproto.proto.test.TestAllTypesProto3.repeated_nested_message:type_name -> goproto.proto.test.TestAllTypesProto3.NestedMessage
	3,  // 9: goproto.proto.test.TestAllTypesProto3.repeated_foreign_message:type_name -> goproto.proto.test.ForeignMessageProto3
	1,  // 10: goproto.proto.test.TestAllTypesProto3.repeated_nested_enum:type_name -> goproto.proto.test.TestAllTypesProto3.NestedEnum
	0,  // 11: goproto.proto.test.TestAllTypesProto3.repeated_foreign_enum:type_name -> goproto.proto.test.ForeignEnumProto3
	5,  // 12: goproto.proto.test.TestAllTypesProto3.map_int32_int32:type_name -> goproto.proto.test.TestAllTypesProto3.MapInt32Int32Entry
	6,  // 13: goproto.proto.test.TestAllTypesProto3.map_int64_int64:type_name -> goproto.proto.test.TestAllTypesProto3.MapInt64Int64Entry
	7,  // 14: goproto.proto.test.TestAllTypesProto3.map_uint32_uint32:type_name -> goproto.proto.test.TestAllTypesProto3.MapUint32Uint32Entry
	8,  // 15: goproto.proto.test.TestAllTypesProto3.map_uint64_uint64:type_name -> goproto.proto.test.TestAllTypesProto3.MapUint64Uint64Entry
	9,  // 16: goproto.proto.test.TestAllTypesProto3.map_sint32_sint32:type_name -> goproto.proto.test.TestAllTypesProto3.MapSint32Sint32Entry
	10, // 17: goproto.proto.test.TestAllTypesProto3.map_sint64_sint64:type_name -> goproto.proto.test.TestAllTypesProto3.MapSint64Sint64Entry
	11, // 18: goproto.proto.test.TestAllTypesProto3.map_fixed32_fixed32:type_name -> goproto.proto.test.TestAllTypesProto3.MapFixed32Fixed32Entry
	12, // 19: goproto.proto.test.TestAllTypesProto3.map_fixed64_fixed64:type_name -> goproto.proto.test.TestAllTypesProto3.MapFixed64Fixed64Entry
	13, // 20: goproto.proto.test.TestAllTypesProto3.map_sfixed32_sfixed32:type_name -> goproto.proto.test.TestAllTypesProto3.MapSfixed32Sfixed32Entry
	14, // 21: goproto.proto.test.TestAllTypesProto3.map_sfixed64_sfixed64:type_name -> goproto.proto.test.TestAllTypesProto3.MapSfixed64Sfixed64Entry
	15, // 22: goproto.proto.test.TestAllTypesProto3.map_int32_float:type_name -> goproto.proto.test.TestAllTypesProto3.MapInt32FloatEntry
	16, // 23: goproto.proto.test.TestAllTypesProto3.map_int32_double:type_name -> goproto.proto.test.TestAllTypesProto3.MapInt32DoubleEntry
	17, // 24: goproto.proto.test.TestAllTypesProto3.map_bool_bool:type_name -> goproto.proto.test.TestAllTypesProto3.MapBoolBoolEntry
	18, // 25: goproto.proto.test.TestAllTypesProto3.map_string_string:type_name -> goproto.proto.test.TestAllTypesProto3.MapStringStringEntry
	19, // 26: goproto.proto.test.TestAllTypesProto3.map_string_bytes:type_name -> goproto.proto.test.TestAllTypesProto3.MapStringBytesEntry
	20, // 27: goproto.proto.test.TestAllTypesProto3.map_string_nested_message:type_name -> goproto.proto.test.TestAllTypesProto3.MapStringNestedMessageEntry
	21, // 28: goproto.proto.test.TestAllTypesProto3.map_string_nested_enum:type_name -> goproto.proto.test.TestAllTypesProto3.MapStringNestedEnumEntry
	4,  // 29: goproto.proto.test.TestAllTypesProto3.oneof_nested_message:type_name -> goproto.proto.test.TestAllTypesProto3.NestedMessage
	1,  // 30: goproto.proto.test.TestAllTypesProto3.oneof_enum:type_name -> goproto.proto.test.TestAllTypesProto3.NestedEnum
	2,  // 31: goproto.proto.test.TestAllTypesProto3.NestedMessage.corecursive:type_name -> goproto.proto.test.TestAllTypesProto3
	4,  // 32: goproto.proto.test.TestAllTypesProto3.MapStringNestedMessageEntry.value:type_name -> goproto.proto.test.TestAllTypesProto3.NestedMessage
	1,  // 33: goproto.proto.test.TestAllTypesProto3.MapStringNestedEnumEntry.value:type_name -> goproto.proto.test.TestAllTypesProto3.NestedEnum
	34, // [34:34] is the sub-list for method output_type
	34, // [34:34] is the sub-list for method input_type
	34, // [34:34] is the sub-list for extension type_name
	34, // [34:34] is the sub-list for extension extendee
	0,  // [0:34] is the sub-list for field type_name
}

func init() { file_internal_testprotos_editionsfuzztest_test3_proto_init() }
func file_internal_testprotos_editionsfuzztest_test3_proto_init() {
	if File_internal_testprotos_editionsfuzztest_test3_proto != nil {
		return
	}
	file_internal_testprotos_editionsfuzztest_test3_proto_msgTypes[0].OneofWrappers = []any{
		(*TestAllTypesProto3_OneofUint32)(nil),
		(*TestAllTypesProto3_OneofNestedMessage)(nil),
		(*TestAllTypesProto3_OneofString)(nil),
		(*TestAllTypesProto3_OneofBytes)(nil),
		(*TestAllTypesProto3_OneofBool)(nil),
		(*TestAllTypesProto3_OneofUint64)(nil),
		(*TestAllTypesProto3_OneofFloat)(nil),
		(*TestAllTypesProto3_OneofDouble)(nil),
		(*TestAllTypesProto3_OneofEnum)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_internal_testprotos_editionsfuzztest_test3_proto_rawDesc), len(file_internal_testprotos_editionsfuzztest_test3_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_internal_testprotos_editionsfuzztest_test3_proto_goTypes,
		DependencyIndexes: file_internal_testprotos_editionsfuzztest_test3_proto_depIdxs,
		EnumInfos:         file_internal_testprotos_editionsfuzztest_test3_proto_enumTypes,
		MessageInfos:      file_internal_testprotos_editionsfuzztest_test3_proto_msgTypes,
	}.Build()
	File_internal_testprotos_editionsfuzztest_test3_proto = out.File
	file_internal_testprotos_editionsfuzztest_test3_proto_goTypes = nil
	file_internal_testprotos_editionsfuzztest_test3_proto_depIdxs = nil
}
